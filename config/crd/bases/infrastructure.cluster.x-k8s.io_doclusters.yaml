
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: doclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DOCluster
    listKind: DOClusterList
    plural: doclusters
    singular: docluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: DOCluster is the Schema for the dOClusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: DOClusterSpec defines the desired state of DOCluster
          properties:
            network:
              description: Network configurations
              properties:
                apiServerLoadbalancers:
                  description: Configures an API Server loadbalancers
                  properties:
                    algorithm:
                      description: The API Server load balancing algorithm used to
                        determine which backend Droplet will be selected by a client.
                        It must be either "round_robin" or "least_connections". The
                        default value is "round_robin".
                      enum:
                      - round_robin
                      - least_connections
                      type: string
                    healthCheck:
                      description: An object specifying health check settings for
                        the Load Balancer. If omitted, default values will be provided.
                      properties:
                        healthyThreshold:
                          description: The number of times a health check must pass
                            for a backend Droplet to be marked "healthy" and be re-added
                            to the pool. The vaule must be between 2 and 10. If not
                            specified, the default value is 5.
                          maximum: 10
                          minimum: 2
                          type: integer
                        interval:
                          description: The number of seconds between between two consecutive
                            health checks. The value must be between 3 and 300. If
                            not specified, the default value is 10.
                          maximum: 300
                          minimum: 3
                          type: integer
                        timeout:
                          description: The number of seconds the Load Balancer instance
                            will wait for a response until marking a health check
                            as failed. The value must be between 3 and 300. If not
                            specified, the default value is 5.
                          maximum: 300
                          minimum: 3
                          type: integer
                        unhealthyThreshold:
                          description: The number of times a health check must fail
                            for a backend Droplet to be marked "unhealthy" and be
                            removed from the pool. The vaule must be between 2 and
                            10. If not specified, the default value is 3.
                          maximum: 10
                          minimum: 2
                          type: integer
                      type: object
                    port:
                      description: API Server port. It must be valid ports range (1-65535).
                        If omitted, default value is 6443.
                      maximum: 65535
                      minimum: 1
                      type: integer
                  type: object
              type: object
            region:
              description: The DigitalOcean Region the cluster lives in. It must be
                one of available region on DigitalOcean. See https://developers.digitalocean.com/documentation/v2/#list-all-regions
              type: string
          required:
          - region
          type: object
        status:
          description: DOClusterStatus defines the observed state of DOCluster
          properties:
            apiEndpoints:
              description: APIEndpoints represents the endpoints to communicate with
                the control plane.
              items:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              type: array
            network:
              description: Network encapsulates all things related to DigitalOcean
                network.
              properties:
                apiServerLoadbalancersRef:
                  description: APIServerLoadbalancersRef is the id of apiserver loadbalancers.
                  properties:
                    resourceId:
                      description: ID of DigitalOcean resource
                      type: string
                    resourceStatus:
                      description: Status of DigitalOcean resource
                      type: string
                  type: object
              type: object
            ready:
              description: Ready denotes that the cluster (infrastructure) is ready.
              type: boolean
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
