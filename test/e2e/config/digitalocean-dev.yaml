---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - digitalocean

# For creating local dev images built from the source tree:
# - from the CAPI repository root, `make docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build the cluster-api,
#  bootstrap kubeadm, control-plane kubeadm provider images. This step can be skipped to use upstream images.
# - from the CAPDO repository root, `make e2e` to build the DigitalOcean provider image and run e2e tests.

images:
  # Use local dev images built source tree;
  - name: gcr.io/k8s-staging-cluster-api/cluster-api-controller-amd64:v0.3.9
    loadBehavior: tryLoad
  - name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller-amd64:v0.3.9
    loadBehavior: tryLoad
  - name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller-amd64:v0.3.9
    loadBehavior: tryLoad
  - name: gcr.io/k8s-staging-cluster-api/capdo-manager:e2e
    loadBehavior: mustLoad
  - name: quay.io/jetstack/cert-manager-cainjector:v0.16.1
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-webhook:v0.16.1
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-controller:v0.16.1
    loadBehavior: tryLoad

providers:
  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v0.3.9
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.9/core-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
  - name: kubeadm
    type: BootstrapProvider
    versions:
      - name: v0.3.9
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.9/bootstrap-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
  - name: kubeadm
    type: ControlPlaneProvider
    versions:
      - name: v0.3.9
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.9/control-plane-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
  - name: digitalocean
    type: InfrastructureProvider
    versions:
      - name: v0.4.0
        # Use manifest from source files
        value: ../../../config
        replacements:
          - old: gcr.io/k8s-staging-cluster-api-do/cluster-api-do-controller:master
            new: gcr.io/k8s-staging-cluster-api/capdo-manager:e2e
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
    files:
      # Add a cluster template
      - sourcePath: "../data/infrastructure-digitalocean/cluster-template.yaml"
      - sourcePath: "../data/infrastructure-digitalocean/metadata.yaml"

variables:
  KUBERNETES_VERSION: "v1.17.11"
  CONTROL_PLANE_MACHINE_COUNT: 1
  WORKER_MACHINE_COUNT: 1
  EXP_CLUSTER_RESOURCE_SET: "true"
  # Cluster Addons
  CNI: "./data/cni/calico/calico.yaml"
  CCM: "./data/ccm/digitalocean-cloud-controller-manager.yaml"
  # Following CAPDO variables should be set before testing
  DO_REGION: "nyc1"
  DO_CONTROL_PLANE_MACHINE_TYPE: "s-2vcpu-2gb"
  # DO_CONTROL_PLANE_MACHINE_IMAGE: ""
  DO_NODE_MACHINE_TYPE: "s-2vcpu-2gb"
  # DO_NODE_MACHINE_IMAGE: ""
  # Also following variables are required but it is recommended to use env variables to avoid disclosure of sensitive data
  # DO_SSH_KEY_FINGERPRINT: ""

intervals:
  default/wait-cluster: ["20m", "10s"]
  default/wait-control-plane: ["10m", "10s"]
  default/wait-worker-nodes: ["10m", "10s"]
  conformance/wait-control-plane: ["30m", "10s"]
  conformance/wait-worker-nodes: ["30m", "10s"]
  default/wait-controllers: ["3m", "10s"]
  default/wait-delete-cluster: ["20m", "10s"]
  default/wait-machine-upgrade: ["20m", "10s"]
  default/wait-machine-status: ["20m", "10s"]
  default/wait-infra-subnets: ["5m", "30s"]
